What happens when you initialize a repository? Why do you need to do it?
	It creates a hidden .git directory to store the changes. Git needs the repository to track
	commits.
	
How is the staging area different from the working directory and the repository? What value do you 
think it offers?
	The staging area is a "holding place" until you have all the files included that you want to
	submit to one commit. It allows better control of the commits.
	
How can you use the staging area to make sure you have one commit per logical change?
	You can look in the staging area to make sure you don't have more than one logical change.
	
What are some situations when branches would be helpful in keeping your history organized? How would
branches help?
	Branches are useful when you want to create a different version of the same program, such as
	making an easy version, or changing the language.
	
How do the diagrams help you visualize the branch structure?
	Commit histories are not necessarily linear, so it helps to visualize them with a diagram to see
	how they interrelate to each other.
	
What is the result of merging two branches together? Why do we represent it in the diagram the way 
we do?
	Merging two branches combines the changes in both branches into one branch so that the file
	contains all of the changes. The diagram shows the interrelation between the branches and the
	merge.
	
